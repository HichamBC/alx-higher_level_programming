===============================
 How to Use 2-matrix_divided.py
===============================

``matrix_divided()`` returns a new matrix with all elements divided by a number.

test case 0: importing the function from the module
::
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

test case 1: Dividing each element of a matrix by a positive number 3.
::
    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [2.33, 2.67, 3.0]]

test case 2: Dividing each element of a matrix by a negative number -2.
::
    >>> matrix_divided(matrix, -2)
    [[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0], [-3.5, -4.0, -4.5]]

test case 3: Dividing each element of a matrix by a float number 0.5.
::
    >>> matrix_divided(matrix, 0.5)
    [[2.0, 4.0, 6.0], [8.0, 10.0, 12.0], [14.0, 16.0, 18.0]]

test case 4: Dividing each element of a matrix by 0.
::
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

test case 5: Dividing each element of a matrix by a non-number.
::
    >>> matrix_divided(matrix, "a")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

test case 6: Dividing a non-matrix.
::
    >>> matrix = [1, 2, 3]
    >>> matrix_divided(matrix, 4)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

test case 7: each row in matrix has a different size.
::
    >>> matrix = [[1, 2, 3], [4, 5], [6]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

test case 8: matrix is an empty list.
::
    >>> matrix = []
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

test case 9: matrix is an empty matrix.
::
    >>> matrix = [[], [], []]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

test case 10: matrix is None.
::
    >>> matrix = None
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
